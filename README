Можно запускать как с помощью Sencha Cmd (команда sencha app watch), так и с помощью открытия страницы index.html (перед открытием
необходимо выполнить команду sencha app build --development для сборки проекта и установки фреймворка).

⦁	При разработке использована версия ExtJS 6.0.0.
⦁	При разработке фильтров не использовался плагин «gridfilters».

Приложение состоит из нескольких визуальных частей:

1. Окно входа.

1.1. При открытии web-приложения в браузере отображаем форму входа с полями «Логин», «Пароль» и кнопкой «Вход».

При нажатии на кнопку проверяем правильность пары логин-пароль (правильной считается 'admin'-'padmin').
При несовпадении информируем пользователя соответствующим сообщением. Если введены правильные данные, открываем главное окно.

2. Главное окно.

2.1. На главном окне должна быть кнопки «Товары», «Выход» и панель с вкладками (где и будут открываться списки товаров).
2.2. При нажатии на кнопку «Выход», необходимо вернуться на страницу входа.
2.3. При каждом нажатии на кнопку «Товары» - открываем новую вкладку для работы со списком товаров.

3. Вкладка «Товары»

3.1. На вкладке с товарами должны быть 2 фильтра:
⦁	По идентификатору товара. Точное совпадение.
⦁	По описанию товара (вхождение строки поиска в наименование товара).

Фильтры должны отрабатывать по нажатию кнопки «Enter»

3.2. Ниже должна располагаться таблица со списком товаров со следующими колонками:
⦁	ID — целочисленное
⦁	Имя — текстовое
⦁	Описание — текстовое
⦁	Цена — число с плавающей точкой
⦁	Кол-во — целочисленное

Данные для таблицы описать в объекте Store. 

Если количество товаров равно 0, подсвечивать ячейку с кол-во красным цветом.

4. Форма карточки товара.

4.1. При нажатии на ячейку «Имя» открывается карточка товара.
4.2. В карточку товара загружаем данные из выбранной строки. Поля «Цена» и «Кол-во» редактируются, 
предусмотреть проверку ввода (для цены — неотрицательные числа с плавающей точкой, для количества - неотрицательные целые).
4.3. По кнопке «Отмена» закрываем карточку товара.
4.4. По кнопке «Сохранить», если есть измененные данные, необходимо вывести сообщение (о наличии измененных данных), после чего сохранить данные.

⦁	Для фильтрации данных использован метод «grid».getStore().addFilter(...).
⦁	Для карточки товара использована форма Ext.form.Panel.

Расположения компонентов и цветовые схемы применяются на свое усмотрение.